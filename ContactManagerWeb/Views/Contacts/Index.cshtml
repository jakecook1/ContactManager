@model Paginate<ContactManagerWeb.ViewModels.ContactViewModel>
@{
    ViewData["Title"] = "Contacts";
    var activeOnly = @ViewData["ShowActive"] != null ? @ViewData["ShowActive"] : 1;
    var canCreate = ViewBag.CanCreate != null ? ViewBag.CanCreate : false;
}

<div>
    <h1 class="display-4">@ViewData["Title"]</h1>

    @await Html.PartialAsync("../Shared/DisplayTemplates/_SearchDisplay", @ViewData["currentFilter"])

    <div class="d-flex pb-3">
        <div class="flex-grow-1">
            <a asp-action="Create" class="@(canCreate == true ? "btn btn-primary mr-3" : "btn btn-primary mr-3 disabled")">Create</a>
        </div>
        <div>
            <a asp-action="Export" class="btn btn-primary">Export</a>
        </div>
    </div>
    
    <div class="container">
        @await Html.PartialAsync("../Shared/DisplayTemplates/_ContactsTable", @Model.Items)
    </div>

    @{
        var pageNavigation = new PageNavigation
        {
            Index = Model.Index,
            Pages = Model.Pages,
            HasPrevious = Model.HasPrevious,
            HasNext = Model.HasNext
        };
    }

    @await Html.PartialAsync("../Shared/DisplayTemplates/_PageNavigationDisplay", pageNavigation)
</div>

@section Scripts {
    <script src="~/js/addModal.js"></script>
}